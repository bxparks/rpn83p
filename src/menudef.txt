# This file defines the hierarchy of menu items using a custom DSL (Domain
# Specific Language). The `tools/compilemenu.py` script parses this file,
# creates an internal representation of strings, identifiers, and other
# references, then generates the Z80 assembly data statements.
#
# Using a DSL to generate Z80 code makes adding, removing, changing, and
# moving menu items very easy. All of the internal identifiers and cross
# references are automatically generated by the `compilemenu.py` compiler.
#
# Grammar (I really should learn something like EBNF or ABNF properly):
#   program = menuconfig menugroup
#   menuconfig = 'MenuConfig' '[' config* ']'
#   config = 'ItemName' value
#     | 'ItemHandler' value
#     | 'GroupHandler' value
#   menugroup =  'MenuGroup' groupname grouplabel [handler] '[' menurow* ']'
#   menurow = 'MenuRow' '[' menunode*5 ']'
#   menunode = menuitem | menuitemalt | menugroup
#   menuitem = 'MenuItem' itemname itemlabel
#   menuitemalt = 'MenuItemAlt' itemname itemaltname itemlabel
#   handler = printableASCII+
#   nameHandler = printableASCII+
#   backHandler = printableASCII+
#   value = printableASCII+
#   groupname = alpha+
#   itemname = alpha+ | '*'
#   itemaltname = alpha+
#   altName = alpha+
#   grouplabel = alpha+
#   itemlabel = alpha+ | '*'
#   alpha =  printableASCII | fonttag
#   fonttag = '<' printableASCII+ '>'
#
# Lexical parsing rules:
#   - tokens are separated by spaces
#   - newlines are white spaces with no other meaning or behavior
#   - square brackets [ ] means "list of"
#   - '*' indicates a blank MenuItem with no ID constant
#   - comments begin with '#' and continue to the until of the line
#
# Semantics:
#   - groupname,itemname: the display name for the menu group or item
#   - itemaltname: alternative name for the menu item
#   - label: identifier for the node data in the assembly code, also used as
#       prefix for other identifiers (e.g. if the label="mNum", there will be
#       other identifiers such as "mNumId", "mNumName").
#   - fonttag: a symbol from the TI-OS Small Font table, e.g. '<Sdegree>'
#   - MenuRow: always has 5 menu nodes
#   - MenuGroup: supports an optional 3rd argument `handler` that overrides
#     the default handler defined by the `GroupHandler` config command

# Define the defaults for blank menu items and menu groups.
MenuConfig [
  ItemName mNullName
  ItemHandler mNullHandler
  GroupHandler mGroupHandler
]

# Defines the hierarchy of menus.
MenuGroup root mRoot [
  MenuRow [
    # Advanced math functions.
    MenuGroup MATH mMath [
      MenuRow [
        MenuItem X<Scaret>3 mCube
        MenuItem <ScubeR><Sroot>X mCubeRoot
        MenuItem X<Sroot>Y mXRootY
        MenuItem ATN2 mAtan2
      ]
      MenuRow [
        MenuItem 2<Scaret>X mTwoPow # 2^x
        MenuItem LOG2 mLog2 # log_base2(x)
        MenuItem LOGB mLogBase # log_base_x(y)
        MenuItem E<Scaret>X<Sdash> mExpMinusOne # exp(x)-1
        MenuItem LN1<SplusSign> mLnOnePlus # ln(1+x)
      ]
    ]
    # Arithmetic functions.
    MenuGroup NUM mNum [
      MenuRow [
        MenuItem <Spercent> mPercent
        MenuItem <Spercent>CH mPercentChange
        MenuItem GCD mGcd
        MenuItem LCM mLcm
        MenuItem PRIM mPrime
      ]
      #MenuRow [
      #  MenuItem PMOD mPrimeMod # for debugging modU32ByDE
      #]
      MenuRow [
        MenuItem IP mIntPart
        MenuItem FP mFracPart
        MenuItem FLR mFloor
        MenuItem CEIL mCeil
        MenuItem NEAR mNear
      ]
      MenuRow [
        MenuItem ABS mAbs
        MenuItem SIGN mSign
        MenuItem MOD mMod
        MenuItem MIN mMin
        MenuItem MAX mMax
      ]
      MenuRow [
        MenuItem RNDF mRoundToFix # round to FIX (ENG, SCI)
        MenuItem RNDN mRoundToN # round to specified N digits
        MenuItem RNDG mRoundToGuard # round to 10 digits, removing guard digits
      ]
    ]
    MenuGroup PROB mProb [
      MenuRow [
        MenuItem COMB mComb
        MenuItem PERM mPerm
        MenuItem N<Sexclam> mFactorial
        MenuItem RAND mRandom
        MenuItem SEED mRandomSeed
      ]
    ]
    MenuGroup CPLX mComplex [
      MenuRow [
        MenuItem REAL mComplexReal
        MenuItem IMAG mComplexImag
        MenuItem CONJ mComplexConj
        MenuItem CABS mComplexAbs
        MenuItem CANG mComplexAngle
      ]
    ]
    MenuItem HELP mHelp
  ]
  MenuRow [
    # Override the default mGroupHandler to revert to DEC mode upon exit.
    MenuGroup BASE mBase mBaseHandler [
      MenuRow [
        MenuItemAlt DEC DEC<Sblock> mDec # decimal
        MenuItemAlt HEX HEX<Sblock> mHex # hexadecimal
        MenuItemAlt OCT OCT<Sblock> mOct # octal
        MenuItemAlt BIN BIN<Sblock> mBin # binary
      ]
      MenuRow [
        MenuItem AND mBitwiseAnd
        MenuItem OR mBitwiseOr
        MenuItem XOR mBitwiseXor
        MenuItem NOT mBitwiseNot # 1's complement
        MenuItem NEG mBitwiseNeg # 2's complement
      ]
      MenuRow [
        MenuItem SL mShiftLeftLogical # shift left logical
        MenuItem SR mShiftRightLogical # shift right logical
        MenuItem ASR mShiftRightArithmetic # shift right arithmetic
        MenuItem SLn mShiftLeftLogicalN # shift left logical by N
        MenuItem SRn mShiftRightLogicalN # shift right logical by N
      ]
      MenuRow [
        MenuItem RL mRotateLeftCircular # rotate left circular
        MenuItem RR mRotateRightCircular # rotate right circular
        MenuItem RLC mRotateLeftCarry # rotate left carry
        MenuItem RRC mRotateRightCarry # rotate right carry
      ]
      MenuRow [
        MenuItem RLn mRotateLeftCircularN # rotate left circular by N
        MenuItem RRn mRotateRightCircularN # rotate right circular by N
        MenuItem RLCn mRotateLeftCarryN # rotate left carry by N
        MenuItem RRCn mRotateRightCarryN # rotate right carry by N
      ]
      MenuRow [
        MenuItem CB mClearBit
        MenuItem SB mSetBit
        MenuItem B<Squestion> mGetBit
        MenuItem REVB mReverseBit
        MenuItem CNTB mCountBit
      ]
      MenuRow [
        MenuItem B<SplusSign> mBaseAdd
        MenuItem B<Sdash> mBaseSubt
        MenuItem B<Scross> mBaseMult
        MenuItem B<Sslash> mBaseDiv
        MenuItem BDIV mBaseDiv2
      ]
      MenuRow [
        MenuItem CCF mClearCarryFlag
        MenuItem SCF mSetCarryFlag
        MenuItem CF<Squestion> mGetCarryFlag
        MenuItem WSIZ mSetWordSize # 8, 16, 24, 32
        MenuItem WSZ<Squestion> mGetWordSize
      ]
    ]
    MenuGroup HYP mHyperbolic [
      MenuRow [
        MenuItem * *
        MenuItem SINH mSinh
        MenuItem COSH mCosh
        MenuItem TANH mTanh
        MenuItem * *
      ]
      MenuRow [
        MenuItem * *
        MenuItem ASNH mAsinh
        MenuItem ACSH mAcosh
        MenuItem ATNH mAtanh
        MenuItem * *
      ]
    ]
    MenuGroup STAT mStat [
      MenuRow [
        MenuItem <ScapSigma><SplusSign> mStatPlus
        MenuItem <ScapSigma><Sdash> mStatMinus
        MenuItemAlt ALL<ScapSigma> ALL<Sblock> mStatAllMode
        MenuItemAlt LIN<ScapSigma> LIN<Sblock> mStatLinearMode
        MenuItem CL<ScapSigma> mStatClear
      ]
      MenuRow [
        MenuItem SUM mStatSum
        MenuItem MEAN mStatMean
        MenuItem WMN mStatWeightedMean
        MenuItem N mStatN
        MenuGroup <ScapSigma> mStatRegs [
          MenuRow [
            MenuItem <ScapSigma>X mStatRegX
            MenuItem <ScapSigma>X2 mStatRegX2
            MenuItem <ScapSigma>Y mStatRegY
            MenuItem <ScapSigma>Y2 mStatRegY2
            MenuItem <ScapSigma>XY mStatRegXY
          ]
          MenuRow [
            MenuItem <ScapSigma>N mStatRegN
            MenuItem <ScapSigma>LX mStatRegLnX
            MenuItem <ScapSigma>LX2 mStatRegLnX2
            MenuItem <ScapSigma>LY mStatRegLnY
            MenuItem <ScapSigma>LY2 mStatRegLnY2
          ]
          MenuRow [
            MenuItem <ScapSigma>LXL mStatRegLnXLnY
            MenuItem <ScapSigma>XLY mStatRegXLnY
            MenuItem <ScapSigma>YLX mStatRegYLnX
          ]
        ]
      ]
      MenuRow [
        MenuItem SDEV mStatSampleSdev
        MenuItem SCOV mStatSampleCov
        MenuItem PDEV mStatPopSdev
        MenuItem PCOV mStatPopCov
        MenuGroup CFIT mCfit [
          MenuRow [
            MenuItem Y<Sconvert>X mCfitForcastX
            MenuItem X<Sconvert>Y mCfitForcastY
            MenuItem SLOP mCfitSlope
            MenuItem YINT mCfitIntercept
            MenuItem CORR mCfitCorrelation
          ]
          MenuRow [
            MenuItemAlt LINF LIN<Sblock> mCfitLinear
            MenuItemAlt LOGF LOG<Sblock> mCfitLog
            MenuItemAlt EXPF EXP<Sblock> mCfitExp
            MenuItemAlt PWRF PWR<Sblock> mCfitPower
            MenuItem BEST mCfitBest
          ]
        ]
      ]
    ]
    MenuGroup CONV mConv [
      MenuRow [
        MenuItem <Sconvert>DEG mRToD
        MenuItem <Sconvert>RAD mDToR
        MenuItem * *
        MenuItem <Sconvert>REC mPToR
        MenuItem <Sconvert>POL mRToP
      ]
      MenuRow [
        MenuItem <Sconvert>HR mHmsToHr
        MenuItem <Sconvert>HMS mHrToHms
        MenuItem HMS<SplusSign> mHmsPlus
        MenuItem HMS<Sdash> mHmsMinus
      ]
    ]
    MenuGroup TVM mTvm [
      MenuRow [
        MenuItem N mTvmN
        MenuItem I<Spercent>YR mTvmIYR
        MenuItem PV mTvmPV
        MenuItem PMT mTvmPMT
        MenuItem FV mTvmFV
      ]
      MenuRow [
        MenuItemAlt P<Sslash>YR P<Sslash>Y<Sblock> mTvmPYR
        MenuItemAlt C<Sslash>YR C<Sslash>Y<Sblock> mTvmCYR
        MenuItemAlt BEG BEG<Sblock> mTvmBegin
        MenuItemAlt END END<Sblock> mTvmEnd
        MenuItem CLTV mTvmClear
      ]
      MenuRow [
        # TVM Solver's initial first and second guesses. The label shown to
        # users is one-based, because a '0' looks like a capital 'O', and most
        # non-software people are more familar with 1-based counting. But
        # internally, we use a zero-based system and these variables are known
        # consistently as i0 (IYR0) and i1 (IYR1) respectively.
        MenuItemAlt IYR1 IY1<Sblock> mTvmIYR0 # TVM Solver's first guess
        MenuItemAlt IYR2 IY2<Sblock> mTvmIYR1 # TVM Solver's second guess
        MenuItemAlt TMAX TMX<Sblock> mTvmIterMax # TVM Solver max iter count
        MenuItem * *
        MenuItem RSTV mTvmSolverReset
      ]
    ]
  ]
  MenuRow [
    MenuGroup CLR mClear [
      MenuRow [
        MenuItem CLX mClearX
        MenuItem CLST mClearStack
        MenuItem CLRG mClearRegs
        MenuItem CL<ScapSigma> mClearStat
        MenuItem CLTV mClearTvm
      ]
      MenuRow [
        MenuItem CLD mClearDisplay
      ]
    ]
    MenuGroup MODE mMode [
      MenuRow [
        MenuItemAlt FIX FIX<Sblock> mFix
        MenuItemAlt SCI SCI<Sblock> mSci
        MenuItemAlt ENG ENG<Sblock> mEng
        MenuItemAlt RAD RAD<Sblock> mRad
        MenuItemAlt DEG DEG<Sblock> mDeg
      ]
      MenuRow [
        MenuItemAlt RRES RRE<Sblock> mNumResultModeReal
        MenuItemAlt CRES CRE<Sblock> mNumResultModeComplex
        MenuItemAlt RECT REC<Sblock> mComplexModeRect
        MenuItemAlt PRAD PRA<Sblock> mComplexModeRad
        MenuItemAlt PDEG PDE<Sblock> mComplexModeDeg
      ]
      MenuRow [
        MenuItem RSIZ mSetRegSize
        MenuItem RSZ<Squestion> mGetRegSize
        MenuItem * *
        MenuItem SSIZ mSetStackSize
        MenuItem SSZ<Squestion> mGetStackSize
      ]
      MenuRow [
        MenuItemAlt <Scomma>EE <Scomma>EE<Sblock> mCommaEENormal
        MenuItemAlt EE<Scomma> EE<Scomma><Sblock> mCommaEESwapped
        MenuItem * *
        MenuItemAlt <SlBrace><Speriod><Speriod><SrBrace> <SlBrace><Speriod><Speriod><SrBrace><Sblock> mFormatRecordRaw
        MenuItemAlt <Squote><Speriod><Speriod><Squote> <Squote><Speriod><Speriod><Squote><Sblock> mFormatRecordString
      ]
    ]
    MenuGroup STK mStack [
      MenuRow [
        MenuItem DUP mStackDup
        MenuItem R<SupArrow> mStackRollUp
        MenuItem R<SdownArrow> mStackRollDown
        MenuItem DROP mStackDrop
        MenuItem X<Sleft><Sconvert>Y mStackExchangeXY
      ]
    ]
    MenuGroup UNIT mUnit [
      MenuRow [
        MenuGroup UFCN mUnitFunctions [
          MenuRow [
            MenuItem UVAL mUnitValue # extract the display value
            MenuItem UBAS mUnitBase # convert to denominate in base unit
          ]
        ]
        MenuGroup LENG mUnitLengh [
          MenuRow [
            # MenuItem nm mUnitNanoMeter
            MenuItem <Smu>m mUnitMicroMeter
            MenuItem mm mUnitMilliMeter
            MenuItem cm mUnitCentiMeter
            MenuItem m mUnitMeter
            MenuItem km mUnitKiloMeter
          ]
          MenuRow [
            MenuItem mil mUnitMil
            MenuItem in mUnitInch
            MenuItem ft mUnitFoot
            MenuItem yd mUnitYard
            MenuItem mi mUnitMile
          ]
          # More obscure length units in subfolders here
          MenuRow [
            MenuGroup ASTR mAstronomy [
              MenuRow [
                MenuItem AU mUnitAstronomicalUnit
                MenuItem ly mUnitLightYear
                MenuItem pc mUnitParsec
              ]
            ]
            MenuGroup NAUT mNautical [
              MenuRow [
                MenuItem fthm mUnitFanthom
                MenuItem cabl mUnitCable
                MenuItem nmi mUnitNauticalMile
              ]
            ]
            MenuGroup SURV mSurvey [
              MenuRow [
                MenuItem svft mUnitSurveyFoot
                MenuItem rod mUnitRod
                MenuItem chai mUnitChain
                MenuItem frlg mUnitFurlong
              ]
              MenuRow [
                MenuItem svmi mUnitSurveyMile
                MenuItem leag mUnitLeague
              ]
            ]
          ]
        ]
        MenuGroup AREA mUnitArea [
          MenuRow [
            MenuItem mm<Sarea> mUnitSqMilliMeter
            MenuItem cm<Sarea> mUnitSqCentiMeter
            MenuItem m<Sarea> mUnitSqMeter
            MenuItem km<Sarea> mUnitSqKiloMeter
          ]
          MenuRow [
            MenuItem in<Sarea> mUnitSqInch
            MenuItem ft<Sarea> mUnitSqFoot
            MenuItem yd<Sarea> mUnitSqYard
            MenuItem mi<Sarea> mUnitSqMile
            MenuItem nmi<Sarea> mUnitSqNauticalMile
          ]
          MenuRow [
            MenuItem acre mUnitAcre
            MenuItem ha mUnitHectare
            MenuItem usfb mUnitUSFootball
            MenuItem cafb mUnitCAFootball
          ]
        ]
        MenuGroup VOL mUnitVol [
          MenuRow [
            MenuItem mm<Scube> mUnitCuMilliMeter
            MenuItem cm<Scube> mUnitCuCentiMeter
            MenuItem m<Scube> mUnitCuMeter
            MenuItem km<Scube> mUnitCuKiloMeter
          ]
          MenuRow [
            MenuItem in<Scube> mUnitCuInch
            MenuItem ft<Scube> mUnitCuFoot
            MenuItem yd<Scube> mUnitCuYard
            MenuItem mi<Scube> mUnitCuMile
            MenuItem nmi<Scube> mUnitCuNauticalMile
          ]
          MenuRow [
            MenuItem <Smu>L mUnitMicroLiter
            MenuItem mL mUnitMilliLiter
            MenuItem L mUnitLiter
          ]
          MenuRow [
            MenuGroup US mUnitVolUS [
              MenuRow [
                MenuItem tsp mUnitTeaspoon
                MenuItem tbsp mUnitTablespoon
                MenuItem floz mUnitFluidOunce
                MenuItem gill mUnitGill
                MenuItem cup mUnitCup
              ]
              MenuRow [
                MenuItem pint mUnitPint
                MenuItem qt mUnitQuart
                MenuItem gal mUnitGallon
              ]
            ]
            MenuGroup IMP mUnitVolImp [
              MenuRow [
                MenuItem floz mUnitImpFluidOunce
                MenuItem gill mUnitImpGill
                MenuItem cup mUnitImpCup
                MenuItem pint mUnitImpPint
                MenuItem qt mUnitImpQuart
              ]
              MenuRow [
                MenuItem gal mUnitImpGallon
              ]
            ]
            MenuGroup DRY mUnitVolDry [
              MenuRow [
                MenuItem drpt mUnitDryPint
                MenuItem drqt mUnitDryQuart
                MenuItem dgal mUnitDryGallon
                MenuItem peck mUnitPeck
                MenuItem bush mUnitBushel
              ]
              MenuRow [
                MenuItem dbbl mUnitDryBarrel
              ]
            ]
            MenuGroup MISC mUnitVolMisc [
              MenuRow [
                MenuItem bdft mUnitBoardFoot
                MenuItem bbl mUnitOilBarrel
                MenuItem olmp mUnitOlympicPool
                MenuItem acft mUnitAcreFoot
              ]
            ]
          ]
        ]
        MenuGroup MASS mUnitMass [
          MenuRow [
            MenuItem <Smu>g mUnitMicroGram
            MenuItem mg mUnitMilliGram
            MenuItem g mUnitGram
            MenuItem kg mUnitKiloGram
            MenuItem t mUnitTonne
          ]
          MenuRow [
            MenuItem oz mUnitOunce
            MenuItem lbs mUnitPound
            MenuItem ton mUnitTon
            MenuItem lton mUnitLongTon
          ]
        ]
      ]
      MenuRow [
        MenuGroup TEMP mUnitTemp [
          MenuRow [
            MenuItem <Stemp>C mUnitCelsius
            MenuItem <Stemp>F mUnitFahrenheit
            MenuItem <Stemp>R mUnitRankine
            MenuItem <Stemp>K mUnitKelvin # add <Stemp> to 'K' for visual hint
          ]
        ]
        MenuGroup VELO mUnitVelocity [
          MenuRow [
            MenuItem m<Sslash>s mUnitMeterPerSecond
            MenuItem ft<Sslash>s mUnitFootPerSecond
            MenuItem kph mUnitKiloMeterPerHour
            MenuItem mph mUnitMilePerHour
          ]
        ]
        MenuGroup PRES mUnitPressure [
          MenuRow [
            MenuItem Pa mUnitPascal
            MenuItem hPa mUnitHectoPascal
            MenuItem kPa mUnitKiloPascal
            MenuItem atm mUnitAtmosphere
          ]
          MenuRow [
            MenuItem mbar mUnitMilliBar
            MenuItem dbar mUnitDeciBar
            MenuItem bar mUnitBar
            MenuItem psi mUnitPoundSquareInch
          ]
          MenuRow [
            MenuItem mmH mUnitMilliMeterMercury
            MenuItem inHg mUnitInchMercury
            MenuItem Torr mUnitTorr
          ]
        ]
        MenuGroup ENER mUnitEnergy [
          MenuRow [
            MenuItem J mUnitJoule
            MenuItem Wh mUnitWattHour
            MenuItem kWh mUnitKiloWattHour
            MenuItem cal mUnitCalorie
            MenuItem kcal mUnitKiloCalorie
          ]
          MenuRow [
            MenuItem eV mUnitElectronVolt
            MenuItem Btu mUnitBritishThermalUnit
            MenuItem tTNT mUnitTonTNT
          ]
        ]
        MenuGroup PWR mUnitPower [
          MenuRow [
            MenuItem W mUnitWatt
            MenuItem hp mUnitHorsepower
          ]
        ]
      ]
      MenuRow [
        MenuGroup FUEL mUnitFuel [
          MenuRow [
            MenuItem Lkm mUnitLitersPerHundredKiloMeters
            MenuItem mpg mUnitMilesPerGallon
          ]
        ]
      ]
    ]
    MenuGroup DATE mDate [
      MenuRow [
        MenuItem LEAP mLeapYear # operates on year
        MenuItem DOW mDayOfWeek # operates on Date
        MenuItem * *
        MenuItem D<Sconvert>DY mDateToEpochDays
        MenuItem DY<Sconvert>D mEpochDaysToDate
      ]
      MenuRow [
        MenuItem D<Scross><Sconvert>S mDateRelatedToSeconds
        MenuItem S<Sconvert>DR mSecondsToDuration
        MenuItem S<Sconvert>T mSecondsToTime
        MenuItem S<Sconvert>DZ mEpochSecondsToAppDateTime
        MenuItem S<Sconvert>UT mEpochSecondsToUTCDateTime
      ]
      MenuRow [
        MenuItem TZ<Sconvert>H mTimeZoneToHours
        MenuItem H<Sconvert>TZ mHoursToTimeZone
        MenuGroup DOPS mDops [
          MenuRow [
            MenuItem DSHK mDateShrink # shrink DZ to DT, DT to D
            MenuItem DEXD mDateExtend # extend D to DT, DT to DZ
            MenuItem DCUT mDateCut # cut DZ to (DT,TZ), DT to (D,T)
            MenuItem DLNK mDateLink # link (DT,TZ) to DZ, (D,T) to DT
            MenuItem * *
          ]
        ]
        MenuGroup EPCH mEpoch [
          MenuRow [
            MenuItemAlt UNIX UNI<Sblock> mEpochUnix # 1970-01-01T00:00:00
            MenuItemAlt NTP NTP<Sblock> mEpochNtp # 1900-01-01T00:00:00
            MenuItemAlt GPS GPS<Sblock> mEpochGps # 1980-01-06T00:00:00
            MenuItemAlt TIOS TI<Sblock> mEpochTios # 1997-01-00T00:00:00
            MenuItemAlt Y2K Y2K<Sblock> mEpochY2k # 2000-01-01T00:00:00
          ]
          MenuRow [
            MenuItemAlt CEPC CEP<Sblock> mEpochCustom # custom, defined by EPC
            MenuItem * *
            MenuItem * *
            MenuItem EPC mEpochSetCustom # set custom epoch date
            MenuItem EPC<Squestion> mEpochGetCustom # get custom epoch date
          ]
        ]
        MenuGroup CLK mClk [
          MenuRow [
            MenuItem NOW mGetNow # RTC epochSeconds
            MenuItem NOWD mGetNowDate # RTC Date using appTimeZone
            MenuItem NOWT mGetNowTime # RTC Time using appTimeZone
            MenuItem NWDZ mGetNowAppDateTime # RTC OffsetDateTime using appTimeZone
            MenuItem NWUT mGetNowUTCDateTime # RTC OffsetDateTime using UTC
          ]
          MenuRow [
            MenuItem TZ mSetTimeZone
            MenuItem TZ<Squestion> mGetTimeZone
            MenuItem CTZ mSetClockTimeZone
            MenuItem CTZ<Squestion> mGetClockTimeZone
            MenuItem SETC mSetClock # set current clock
          ]
        ]
      ]
      # MenuRow [
      #   MenuGroup ISO mIso [
      #     MenuRow [
      #       MenuItem D<Sconvert>IS mDateToIsoWeekDay
      #       MenuItem IS<Sconvert>D mIsoWeekDayToDate
      #     ]
      #   ]
      #   MenuGroup JUL mJulian [
      #     MenuRow [
      #       MenuItem D<Sconvert>JU mDateTimeToJulian
      #       MenuItem JU<Sconvert>D mJulianToDateTime
      #       MenuItem * *
      #       MenuItem D<Sconvert>MJ mDateTimeToModifiedJulian
      #       MenuItem MJ<Sconvert>D mModifiedJulianToDateTime
      #     ]
      #   ]
      # ]
    ]
  ]
]
